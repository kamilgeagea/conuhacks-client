[{"/Users/kamilgeagea/Developer/competitions/ConuHacks/client/src/index.js":"1","/Users/kamilgeagea/Developer/competitions/ConuHacks/client/src/App.js":"2","/Users/kamilgeagea/Developer/competitions/ConuHacks/client/src/reportWebVitals.js":"3","/Users/kamilgeagea/Developer/competitions/ConuHacks/client/src/pages/Main/index.js":"4","/Users/kamilgeagea/Developer/competitions/conuhacks-client/src/index.js":"5","/Users/kamilgeagea/Developer/competitions/conuhacks-client/src/reportWebVitals.js":"6","/Users/kamilgeagea/Developer/competitions/conuhacks-client/src/App.js":"7","/Users/kamilgeagea/Developer/competitions/conuhacks-client/src/pages/Main/index.js":"8"},{"size":535,"mtime":1674317915994,"results":"9","hashOfConfig":"10"},{"size":127,"mtime":1674320653577,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1674317915995,"results":"12","hashOfConfig":"10"},{"size":5184,"mtime":1674334460523,"results":"13","hashOfConfig":"10"},{"size":535,"mtime":1674317915994,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1674317915995,"results":"16","hashOfConfig":"15"},{"size":127,"mtime":1674320653577,"results":"17","hashOfConfig":"15"},{"size":5321,"mtime":1674337929554,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wa9ijz",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xh6d4r",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"/Users/kamilgeagea/Developer/competitions/ConuHacks/client/src/index.js",[],[],"/Users/kamilgeagea/Developer/competitions/ConuHacks/client/src/App.js",[],[],"/Users/kamilgeagea/Developer/competitions/ConuHacks/client/src/reportWebVitals.js",[],[],"/Users/kamilgeagea/Developer/competitions/ConuHacks/client/src/pages/Main/index.js",["45"],[],"import { useEffect, useState, useRef } from \"react\";\nimport StarIcon from '@mui/icons-material/Star';\nimport LanguageIcon from '@mui/icons-material/Language';\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\nimport QueryBuilderIcon from '@mui/icons-material/QueryBuilder';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\n\nimport \"./Main.scss\";\n\nconst photos = [\n    \"https://seriouseats.com/thmb/e16lLOoVEix_JZTv7iNyAuWkPn8=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/__opt__aboutcom__coeus__resources__content_migration__serious_eats__seriouseats.com__recipes__images__2014__09__20140918-jamie-olivers-comfort-food-insanity-burger-david-loftus-f7d9042bdc2a468fbbd50b10d467dafd.jpg\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/Hamburger_%28black_bg%29.jpg/800px-Hamburger_%28black_bg%29.jpg\",\n    \"https://www.bhg.com/thmb/QXGyadcA-06uFSeV5woRVtKlFik=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/quick-poutine-BBOQQT52qRM8_P2JsdQxXI-2336ec1ff4744ee89333a3da76fd7ae3.jpg\"\n];\n\nconst placesDetected = [\n    \"Mc\",\n    \"Za\"\n];\n\nconst Main = () => {\n    const [isOpen, setOpen] = useState(false);\n    const videoRef = useRef(null);\n    const [tab, setTab] = useState(0);\n\n    useEffect(() => {\n        if (!videoRef) return\n        navigator.mediaDevices.getUserMedia({ video: true }).then(stream => {\n            let video = videoRef.current;\n            video.srcObject = stream;\n            video.play();\n        });\n    }, [videoRef]);\n\n    return (\n        <div className=\"main\">\n            <div className=\"display\">\n\n                <div className=\"places-detected\">\n                    {placesDetected.map(placeDetected => (\n                        <div key={placeDetected} className=\"place-detected\">{placeDetected}</div>\n                    ))}\n                </div>\n\n                <div className={`sheet ${isOpen && \"open\"}`}>\n                    <div className=\"fit-padding\">\n                        <div onClick={() => setOpen(!isOpen)}>\n                            <div className=\"handle\">\n                                <div className=\"knob\" />\n                            </div>\n\n                            <div className=\"title-row\">\n                                <div className=\"title\">McDonald's</div>\n                                <div className=\"rating\">\n                                    <div className=\"score\">4.5</div>\n                                    <StarIcon className=\"star-icon\" />\n                                </div>\n                            </div>\n\n                            <div className=\"description-row\">\n                                <div className=\"place-type\">\n                                    <div className=\"type\">Restaurant</div>\n                                    <div className=\"cost\"> . $$</div>\n                                </div>\n                                <div className=\"place-status\">Open</div>\n                            </div>\n                        </div>\n\n                        <div className=\"info\">\n                            <LanguageIcon className=\"icon\" />\n                            <div className=\"text\">mcdonalds.com</div>\n                            \n                        </div>\n                        <div className=\"info\">\n                            <LocalPhoneIcon className=\"icon\" />\n                            <div className=\"text\">514-697-2799</div>\n                        </div>\n                        <div className=\"info\">\n                            <QueryBuilderIcon className=\"icon\" />\n                            <div className=\"text\">Closes 5 pm</div>\n                        </div>\n                        <div className=\"info\">\n                            <LocationOnIcon className=\"icon\" />\n                            <div className=\"text\">17000 Trans-Canada Hwy, Kirkland, Quebec H9J 2M5, Canada</div>\n                        </div>\n\n\n                        <div className=\"tab-menu\">\n                            <div className=\"menu\">\n                                <div\n                                    className={`item ${tab === 0 && \"active\"}`}\n                                    onClick={() => setTab(0)}\n                                >Photos</div>\n                                <div\n                                    className={`item ${tab === 1 && \"active\"}`}\n                                    onClick={() => setTab(1)}\n                                >About</div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    {tab === 0 && (<div className=\"photos\">\n                        {photos.map(photo => (\n                            <img key={photo} src={photo} />\n                        ))}\n                    </div>)}\n\n                    {tab === 1 && <div className=\"fit-padding\">Classic, long-running fast-food chain known for its burgers & fries.</div>}\n                </div>\n            </div>\n\n            <video\n                width={window.innerWidth}\n                height={window.innerHeight}\n                ref={videoRef}\n            />\n        </div>\n    );\n};\n\nexport default Main;","/Users/kamilgeagea/Developer/competitions/conuhacks-client/src/index.js",[],[],"/Users/kamilgeagea/Developer/competitions/conuhacks-client/src/reportWebVitals.js",[],[],"/Users/kamilgeagea/Developer/competitions/conuhacks-client/src/App.js",[],[],"/Users/kamilgeagea/Developer/competitions/conuhacks-client/src/pages/Main/index.js",["46"],[],"import { useEffect, useState, useRef } from \"react\";\nimport StarIcon from '@mui/icons-material/Star';\nimport LanguageIcon from '@mui/icons-material/Language';\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\nimport QueryBuilderIcon from '@mui/icons-material/QueryBuilder';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\n\nimport \"./Main.scss\";\n\nconst photos = [\n    \"https://seriouseats.com/thmb/e16lLOoVEix_JZTv7iNyAuWkPn8=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/__opt__aboutcom__coeus__resources__content_migration__serious_eats__seriouseats.com__recipes__images__2014__09__20140918-jamie-olivers-comfort-food-insanity-burger-david-loftus-f7d9042bdc2a468fbbd50b10d467dafd.jpg\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/Hamburger_%28black_bg%29.jpg/800px-Hamburger_%28black_bg%29.jpg\",\n    \"https://www.bhg.com/thmb/QXGyadcA-06uFSeV5woRVtKlFik=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/quick-poutine-BBOQQT52qRM8_P2JsdQxXI-2336ec1ff4744ee89333a3da76fd7ae3.jpg\"\n];\n\nconst placesDetected = [\n    \"Mc\",\n    \"Za\"\n];\n\nconst Main = () => {\n    const [isOpen, setOpen] = useState(false);\n    const videoRef = useRef(null);\n    const [tab, setTab] = useState(0);\n\n    useEffect(() => {\n        if (!videoRef) return\n        navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" } }).then(stream => {\n            let video = videoRef.current;\n            video.srcObject = stream;\n            video.play();\n        });\n    }, [videoRef]);\n\n    return (\n        <div className=\"main\">\n            <div className=\"display\">\n\n                <div className=\"places-detected\">\n                    {placesDetected.map(placeDetected => (\n                        <div key={placeDetected} className=\"place-detected\">{placeDetected}</div>\n                    ))}\n                </div>\n\n                <div className={`sheet ${isOpen && \"open\"}`}>\n                    <div className=\"fit-padding\">\n                        <div onClick={() => setOpen(!isOpen)}>\n                            <div className=\"handle\">\n                                <div className=\"knob\" />\n                            </div>\n\n                            <div className=\"title-row\">\n                                <div className=\"title\">McDonald's</div>\n                                <div className=\"rating\">\n                                    <div className=\"score\">4.5</div>\n                                    <StarIcon className=\"star-icon\" />\n                                </div>\n                            </div>\n\n                            <div className=\"description-row\">\n                                <div className=\"place-type\">\n                                    <div className=\"type\">Restaurant</div>\n                                    <div className=\"cost\"> . $$</div>\n                                </div>\n                                <div className=\"place-status\">Open</div>\n                            </div>\n                        </div>\n\n                        <div className=\"info\">\n                            <LanguageIcon className=\"icon\" />\n                            <div className=\"text\">mcdonalds.com</div>\n                            \n                        </div>\n                        <div className=\"info\">\n                            <LocalPhoneIcon className=\"icon\" />\n                            <div className=\"text\">514-697-2799</div>\n                        </div>\n                        <div className=\"info\">\n                            <QueryBuilderIcon className=\"icon\" />\n                            <div className=\"text\">Closes 5 pm</div>\n                        </div>\n                        <div className=\"info\">\n                            <LocationOnIcon className=\"icon\" />\n                            <div className=\"text\">17000 Trans-Canada Hwy, Kirkland, Quebec H9J 2M5, Canada</div>\n                        </div>\n\n\n                        <div className=\"tab-menu\">\n                            <div className=\"menu\">\n                                <div\n                                    className={`item ${tab === 0 && \"active\"}`}\n                                    onClick={() => setTab(0)}\n                                >Photos</div>\n                                <div\n                                    className={`item ${tab === 1 && \"active\"}`}\n                                    onClick={() => setTab(1)}\n                                >About</div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    {tab === 0 && (<div className=\"photos\">\n                        {photos.map(photo => (\n                            <img key={photo} src={photo} />\n                        ))}\n                    </div>)}\n\n                    {tab === 1 && <div className=\"fit-padding\">Classic, long-running fast-food chain known for its burgers & fries.</div>}\n                </div>\n            </div>\n\n            <video\n                autoPlay={true}\n                playsInline={true}\n                muted={true}                \n                width={window.innerWidth}\n                height={window.innerHeight}\n                ref={videoRef}\n            />\n        </div>\n    );\n};\n\nexport default Main;",{"ruleId":"47","severity":1,"message":"48","line":105,"column":29,"nodeType":"49","endLine":105,"endColumn":60},{"ruleId":"47","severity":1,"message":"48","line":105,"column":29,"nodeType":"49","endLine":105,"endColumn":60},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]